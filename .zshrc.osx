##---------------------------------
## alias : osx
##---------------------------------

export PATH=~/.local/bin:/usr/local/bin:/usr/local/sbin:$PATH
export PATH=$PATH:/opt/local/bin:/opt/local/sbin/:~/bin

# osx alias
alias pbc='pbcopy'                   # クリップボードへコピー
alias pbp='pbpaste'                  # クリップボードからペースト
alias dlist='sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* "select LSQuarantineDataURLString from LSQuarantineEvent"'   # Download履歴の表示
alias k2pdfopt='~/bin/k2pdfopt.mac'
alias ssh='sshrc -A'
if [[ -x $(which colordiff) ]]; then
  alias diff='colordiff -u'
else
  alias diff='diff -u'
fi

#osx suffix alias
alias -s {png,jpg,bmp,PNG,JPG,BMP}=/Applications/Preview.app/Contents/MacOS/Preview

# Terminal Colorの設定
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad
#eval `gdircolors $HOME/.dircolors`
#function dircolors() {
#    gdircolors
#}

# vim
export EDITOR=/Applications/MacVim.app/Contents/MacOS/Vim
#alias vi='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
alias vim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@" "+VimFilerExplorer -split -simple -winwidth=40 -no-quit"'
alias vi='vim'
alias view='vim -R'
alias rvim='vim -R'
#alias view='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim -R "$@"'
#alias rvim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim -R "$@"'
#alias vi='/usr/local/bin/vim'
#alias vim='/usr/local/bin/vim'
#alias view='/usr/local/bin/vim -R'

# Git
alias cdghqroot='cd $(ghq root)'
alias repo_cd='cd $(ghq root)/$(ghq list | peco)'
alias repo_browse='hub browse $(ghq list | peco | cut -d "/" -f 2,3)'

# Java #
#Java7
export JAVA_HOME=/Library/Java/JavaVirtualMachines/1.7.0.jdk/Contents/Home
# export JAVA_HOME=/Library/Java/Home
export PATH=$JAVA_HOME/bin:$PATH
# デフォルトエンコーディングSJISをUTF-8へ
export _JAVA_OPTIONS="-Dfile.encoding=UTF-8"

# haskell
export PATH=/Users/yusuke/Library/Haskell/bin:$PATH

# scala
export SCALA_HOME=/Users/yusuke/.svm/current/rt
PATH=$SCALA_HOME/bin:$PATH
export SCALA_DOC_HOME=$SCALA_HOME/../devel-docs/api/

export SCALA_CLASSPATH=~/sandbox/scala/yuroyoro/yuroyoro-util/target/yuroyoro-util-1.0.jar

# Ant
export ANT_VERSION=1.8.0
export ANT_HOME=~/dev/Tools/apache-ant-${ANT_VERSION}
export ANT_OPTS=-Xmx1g
export PATH=$ANT_HOME/bin:$PATH

# Maven2
export MAVEN_VERSION=2.2.1
export MAVEN_HOME=~/dev/Tools/apache-maven-${MAVEN_VERSION}
export PATH=$MAVEN_HOME/bin:$PATH
export MAVEN_OPTS=-Xmx1024M


# man path
MANPATH=/usr/local/man:$MANPATH
export MANPATH
#INFOPATH=/usr/local/info:$INFOPATH
#export INFOPATH

# Mysql
export MYSQL_HOME=/usr/local/mysql
export PATH=$MYSQL_HOME/bin:$PATH
alias h2db='java -cp ~/.m2/repository/com/h2database/h2/1.1.112/h2-1.1.112.jar org.h2.tools.Server'

# STAX SDK
export STAX_HOME=~/dev/Project/sandbox/stax-sdk-0.2.11
export PATH=$PATH:$STAX_HOME

# Adobe AIR
export AIR_HOME=~/dev/air
export FLEX_HOME=~/dev/flex
export PATH=$PATH:$AIR_HOME/bin:$FLEX_HOME/bin

# Google Cloud SDK
source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'
source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'

# Google App Engine SDK for python
export GAE_SDK_VERSION=1.3.4
GAE_SDK_INSTALLED_DIR=~/sandbox/GoogleAppEngine/sdk
export GAE_HOME=$GAE_SDK_INSTALLED_DIR/$GAE_SDK_VERSION/google_appengine
export PATH=$PATH:$GAE_HOME

# Google App Engine SDK for java
export GAEJ_SDK_VERSION=1.3.7
GAEJ_SDK_INSTALLED_DIR=~/sandbox/GAEJava/sdk
export GAEJ_HOME=$GAEJ_SDK_INSTALLED_DIR/appengine-java-sdk-$GAEJ_SDK_VERSION
export PATH=$PATH:$GAEJ_HOME/bin

# Perl
# alias perl='/opt/local/bin/perl'
if [ -d $HOME/.plenv/shims ]; then
    export PLENV_ROOT=$HOME/.plenv/shims
    export PATH="$PLENV_ROOT:$PATH"
fi

# Python
# alias python='/usr/local/bin/python'
# alias easy_install='/usr/local/bin/easy_install'
# export PATH=/usr/local/share/python:$PATH
# alias easy_install='/Library/Frameworks/Python.framework/Versions/2.5/bin/easy_install-2.5'
# export DEFALUT_PYTHON_HOME=~/dev/python/python2.6.6
# export WORKON_HOME=$HOME/.virtualenvs
# source $DEFALUT_PYTHON_HOME/bin/activate
# source /usr/local/Cellar/python/2.7/bin/virtualenvwrapper.sh
# export PATH=/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin:$PATH
# export PYTHONSTARTUP=~/.pythonstartup


# Ruby
# if [[ -s /Users/yusuke/.rvm/scripts/rvm ]] ; then source $HOME/.rvm/scripts/rvm ; fi
# eval "$(rbenv init -)"
# export REFE_DATA_DIR=/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/share/refe
# if [ -d $HOME/.rbenv/shims ]; then
#    export RBENV_ROOT=$HOME/.rbenv/shims
#    export PATH="$RBENV_ROOT:$PATH"
# fi

# Go Lang
export GOROOT=/usr/local/opt/go/libexec
export GOPATH=$HOME/dev/go
export GOOS=darwin
export GOARCH=amd64
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

# Node.js
#[[ -s ~/.nvm/nvm.sh ]] && . ~/.nvm/nvm.sh # This loads NVM
# nvm と指定されたバージョンの Node.js がインストール済みの場合だけ設定を有効にする
if [[ -f ~/.nvm/nvm.sh ]]; then
  source ~/.nvm/nvm.sh
	  if which nvm >/dev/null 2>&1 ;then
	    _nodejs_use_version="v0.8.17"
	    if nvm ls | grep -F -e "${_nodejs_use_version}" >/dev/null 2>&1 ;then
	      nvm use "${_nodejs_use_version}" >/dev/null
	      export NODE_PATH=${NVM_PATH}_modules${NODE_PATH:+:}${NODE_PATH}
	    fi
	    unset _nodejs_use_version
	  fi
fi
export NODE_PATH=/usr/local/lib/node:$PATH
export PATH=/usr/local/share/npm/bin:$PATH

# JRuby
export JRUBY_HOME=$HOME/sandbox/jruby/jruby-1.5.2
export PATH=$PATH:$JRUBY_HOME/bin

# Mirah
export MIRAH_HOME=$HOME/sandbox/mirah/mirah
export PATH=$PATH:$MIRAH_HOME/bin

# For Oracle
# export DISPLAY=:0.0
# ulimit -Hn 65536
# ulimit -Sn 65536
# export ORACLE_BASE=/Users/oracle
# export ORACLE_HOSTNAME=localhost
# export ORACLE_HOME=/Users/oracle/oracle/product/10.2.0/db_1
# export DYLD_LIBRARY_PATH=$ORACLE_HOME/lib
# export LD_LIBRARY_PATH=$ORACLE_HOME/lib
# export ORACLE_SID=orcl
# export NLS_LANG=Japanese_Japan.UTF8
# export ORA_SDTZ=Japan

# export PATH=$PATH:/$ORACLE_HOME/bin


# tmux
alias tmux='TERM=screen-256color-bce tmux -2'
#alias tmux='tmuxx'
#alias tm='tmuxx'
#alias tma='\tmux attach'
#alias tma0='\tmux attach -t 0'
#alias tma1='\tmux attach -t 1'
#alias tma2='\tmux attach -t 2'
#alias tml='\tmux list-sessions'
#alias tmlw='\tmux list-window'

# awsp(aws profile switch)
# ghq get git@github.com:itouuuuuuuuu/awsp.git && cd $(ghq root)/github.com/itouuuuuuuuu/awsp && npm i
alias awsp='cd $(ghq root)/github.com/itouuuuuuuuu/awsp && source ./run.sh && cd - >/dev/null 2>&1'

# Functions
alias jsonf='(){echo $1 | jq}'
alias sqlf='(){echo $1 | npx sql-formatter-cli}'

function peco-z-search
{
  which peco z > /dev/null
  if [ $? -ne 0 ]; then
    echo "Please install peco and z"
    return 1
  fi
  local res=$(z | sort -rn | cut -c 12- | peco)
  if [ -n "$res" ]; then
    BUFFER+="cd $res"
    zle accept-line
  else
    return 1
  fi
}
zle -N peco-z-search
bindkey '^x' peco-z-search

function peco-select-history() {
  BUFFER=$(\history -n -r 1 | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history


# anyenv
if [ -d ${HOME}/.anyenv ] ; then
  export PATH="$HOME/.anyenv/bin:$PATH"
  eval "$(anyenv init - zsh)"
  for D in `ls $HOME/.anyenv/envs`
  do
      export PATH="$HOME/.anyenv/envs/$D/shims:$PATH"
  done
fi

# terraform completion
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/terraform terraform

# kubectl completion
source <(kubectl completion zsh)

# stern completion
source <(stern --completion=zsh)

# https://github.com/cH6noota/switch-role-cli
export PATH="$HOME/bin:$HOME/.aws-sw:$PATH"
