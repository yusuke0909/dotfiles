[toplevel]

whoami = sts get-caller-identity

## search instances
search-instances =
  !f() {
    read -p "Enter the value [TAG:Name]: " TAG_VALUE
    aws ec2 describe-instances \
    --filters Name=tag:Name,Values=${TAG_VALUE} \
    --query 'Reservations[].Instances[].{PrivateIpAddress: PrivateIpAddress,InstanceIdID: InstanceId,Hostname: PublicDnsName,Name: Tags[?Key==`Name`].Value | [0],Type: InstanceType,State: State.Name}' \
    --output table
  }; f

## search by nametag
search-nametag =
  !f() {
    read -p "Enter the value [TAG:Name]: " TAG_VALUE
    aws ec2 describe-tags --filters Name=tag:Name,Values=${TAG_VALUE} --output table
  }; f

## check for updated managed policies
policy-ls =
  !f() {
    DATE=$(TZ=0 date -v-"$1"d +%Y-%m-%dT%H:%M:%S)
    echo "List policies updated after $DATE (UTC)."
    aws iam list-policies \
    --scope AWS \
    --query "sort_by(Policies[? UpdateDate >= '$DATE'].{Arn:Arn,Version:DefaultVersionId,Date:UpdateDate},&Date)" \
    --output table
  }; f

## compare with the most recent version of the specified managed policy
policy-diff =
  !f() {
    VERSION=$(aws iam get-policy --policy-arn $1 --query 'Policy.DefaultVersionId' --output text | tr -d "v")
    BEFORE_VERSION=$((VERSION-1))

    echo "diff Vesion$BEFORE_VERSION and Vesion$VERSION."

    BEFORE_RESULT=$(aws iam get-policy-version --policy-arn $1 --version-id v$BEFORE_VERSION)
    AFTER_RESULT=$(aws iam get-policy-version --policy-arn $1 --version-id v$VERSION)

    echo $BEFORE_RESULT | jq .PolicyVersion.Document >> /tmp/policy_before
    echo $AFTER_RESULT | jq .PolicyVersion.Document >> /tmp/policy_after

    BEFORE_DATE=$(echo $BEFORE_RESULT | jq .PolicyVersion.CreateDate)
    AFTER_DATE=$(echo $AFTER_RESULT | jq .PolicyVersion.CreateDate)

    diff -C 0 --label "Version$BEFORE_VERSION:$BEFORE_DATE" --label "Version$VERSION:$AFTER_DATE" /tmp/policy_before /tmp/policy_after
    rm /tmp/policy_*
  }; f

## display the policy document for the specified managed policy
policy-cat =
  !f() {
    VERSION=$(aws iam get-policy --policy-arn $1 --query 'Policy.DefaultVersionId' --output text)
    echo "View $VERSION policy document."
    aws iam get-policy-version --policy-arn $1 --version-id $VERSION | jq .PolicyVersion.Document | nl
    }; f
